//Implementation of directed graph and its operations using adjacent lists.

#define MAX 100
typedef struct node {
	struct node *next;
	int vertex;
} *GNODE; 
GNODE graph[MAX] = {NULL};


void print(int * n) {
	int i;
	for (i=1; i<= *n; i++){
		if (graph[i] != NULL){
			printf("%d=>", i);
			GNODE temp = graph[i];
			while (temp != NULL){
				printf("%d\t", temp->vertex);
				temp = temp->next;
			}
		printf("\n");
		}
	}
}

void insertVertex(int * n) {
	(*n)++;
	graph[*n] = NULL;
	printf("Vertex inserted: %d\n", *n);
}

void insertEdge(int *n) {
	int src, dest;
	printf("Enter the source vertex of the edge : ");
	scanf("%d", &src);
	printf("Enter the destination vertex of the edge : ");
	scanf("%d", &dest);
	if (src > *n || dest > *n || src <= 0 || dest <= 0){
}
